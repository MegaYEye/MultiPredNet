%%Figure 6 showing effect of sensor drop out in mupnet (sim or phy)
% 3 x 2 all using same model trained 5000 epochs
% Both modalities:
% Tactile only
% Vision only
% Box plots of SRC [4:6]

clear;

rot_scale = 0.3;                % Scale factor to bring pose into scale with X and Y values. Recommend leaving default.
contact_threshold = 0.1;        % The threshold of tactile input that determines whisker contact
sim = true;                     % Is the dataset simulated or not (physical)?

%% Build poses from recorded data

% Only one file path needs to be given if exclusively using simulated or
% physical data; if swapping back and forth, it may save time by replacing
% paths for both
if sim
    load('/your/path/here/dataset.mat');
else
    load('/your/path/here/dataset.mat');
end

[dataset{1}.pose, dataset{1}.odom] = extract_poses(data, sim);
fprintf('head pose1 reconstructed...\n')

%% Both modalities

% Load representations generated by MultiPredNet inference

if sim
    load('/your/path/here/reps.mat');
else
    load('/your/path/here/reps.mat');
end

dataset{1}.reps = reps;
dataset{1}.VT=gen_VT(data, sim);
[dataset{1}.whisks, dataset{1}.SDA, dataset{1}.prots, dataset{1}.PFH] = gen_handcraft(data, contact_threshold);
[dataset{1}.pose_dist, dataset{1}.reps_dist, dataset{1}.hand_dist, dataset{1}.rand_dist, dataset{1}.rank, dataset{1}.rank_hand, dataset{1}.rank_rand] = Calc_sims(dataset{1}, rot_scale);

clear data

%% Tacile only

if sim
    load('/your/path/recon_vis.mat');
else
    load('/your/path/recon_vis.mat');
end

dataset{1}.reps = reps;
[dataset{1}.pose_dist, dataset{2}.reps_dist, dataset{1}.hand_dist, dataset{1}.rand_dist, dataset{2}.rank, dataset{1}.rank_hand, dataset{1}.rank_rand] = Calc_sims(dataset{1}, rot_scale);

%% Vision only

if sim
    load('/your/path/recon_tac.mat');
else
    load('/your/path/recon_tac.mat');
end

dataset{1}.reps = reps;
[dataset{1}.pose_dist, dataset{3}.reps_dist, dataset{1}.hand_dist, dataset{1}.rand_dist, dataset{3}.rank, dataset{1}.rank_hand, dataset{1}.rank_rand] = Calc_sims(dataset{1}, rot_scale);


%% Build figures from data

if sim
    Fig = figure(6); 
    set( Fig, 'Name', 'MultiPredNet sensor drop out (sim, colour)','NumberTitle','off', 'Color', 'White');
else
    Fig = figure(66); 
    set( Fig, 'Name', 'MultiPredNet sensor drop out (phy)','NumberTitle','off', 'Color', 'White');
end
clf

% Heatmaps ////////////////////////////////////
ax=axes('Position',[0.04 0.5 0.27 0.45]);
h = heatmap(dataset{1}.reps_dist, 'ColorbarVisible', 'off'); % 500 epochs
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.37 0.5 0.27 0.45]);
h = heatmap(dataset{2}.reps_dist, 'ColorbarVisible', 'off'); % 1000 epochs
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.7 0.5 0.27 0.45]);
h = heatmap(dataset{3}.reps_dist, 'ColorbarVisible', 'off'); % 5000 epochs
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));
colormap jet

% Boxplots ////////////////////////////////////
ax=axes('Position',[0.06 0.1 0.9 0.35]);
ranks = [dataset{1}.rank dataset{2}.rank dataset{3}.rank];
boxplot(ranks);
yline(0.1,'--b');
yline(mean(mean(dataset{1}.rank_rand)),'--r');
axis([0.5 3.5 -0.4 0.8])
xticks([1 2 3])
xticklabels({'Both','Tactile','Vision'})
