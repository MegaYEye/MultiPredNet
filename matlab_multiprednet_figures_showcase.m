%% Plot RDMs from MuPNET trained on NRP data, comparing representations to pose space

clear;
rot_scale=0.3;

% Below, edit filepaths to resources for two test sets of your choosing. Examples refer to test sets 1 and 2, but can be of any valid test set

%% 1st Test Set
% Paths to test set resources
load('path/to/testset1/poses.mat');   % poses
load('path/to/testset1/images.mat');  % images
load('path/to/testset1/theta.mat');   % theta
load('path/to/testset1/xy.mat');      % xy

% Paths to representations generated by MultiPredNet (from above testset),
% both modalities
load('path/to/testset1/both/reps.mat');             % 'both' representations
load('path/to/testset1/both/recon_vis.mat');        % 'visual' reconstructions 
load('path/to/testset1/both/recon_tac.mat');        % 'tactile' reconstructions

testset{1}.poses=poses;
testset{1}.reps=reps;
testset{1}.recon_vis = recon_vis;
testset{1}.recon_tac = recon_tac;
testset{1}.theta=theta;
testset{1}.xy=xy;
testset{1}.images=images;

% Paths to representations generated by MultiPredNet (from above testset),
% visual only
load('path/to/testset1/visual/reps.mat');                 % 'both' representations
load('path/to/testset1/visual/recon_vis.mat');            % 'visual' reconstructions 
load('path/to/testset1/visual/recon_tac.mat');            % 'tactile' reconstructions

testset{2}.poses=poses;
testset{2}.reps=reps;
testset{2}.recon_vis = recon_vis;
testset{2}.recon_tac = recon_tac;

% Paths to representations generated by MultiPredNet (from above testset),
% tactile only
load('path/to/testset1/tactile/reps.mat');                % 'both' representations
load('path/to/testset1/tactile/recon_vis.mat');           % 'visual' reconstructions 
load('path/to/testset1/tactile/recon_tac.mat');           % 'tactile' reconstructions

testset{3}.poses=poses;
testset{3}.reps=reps;
testset{3}.recon_vis = recon_vis;
testset{3}.recon_tac = recon_tac;

%% 2nd test set
% Paths to test set resources
load('path/to/testset2/poses.mat');   % poses
load('path/to/testset2/images.mat');  % images
load('path/to/testset2/theta.mat');   % theta
load('path/to/testset2/xy.mat');      % xy

% Paths to representations generated by MultiPredNet (from above testset),
% both modalities
load('path/to/testset2/both/reps.mat');             % 'both' representations
load('path/to/testset2/both/recon_vis.mat');        % 'visual' reconstructions 
load('path/to/testset2/both/recon_tac.mat');        % 'tactile' reconstructions

testset{4}.poses=poses;
testset{4}.reps=reps;
testset{4}.recon_vis = recon_vis;
testset{4}.recon_tac = recon_tac;
testset{4}.theta=theta;
testset{4}.xy=xy;
testset{4}.images=images;

% Paths to representations generated by MultiPredNet (from above testset),
% visual only
load('path/to/testset2/visual/reps.mat');                 % 'both' representations
load('path/to/testset2/visual/recon_vis.mat');            % 'visual' reconstructions 
load('path/to/testset2/visual/recon_tac.mat');            % 'tactile' reconstructions

testset{5}.poses=poses;
testset{5}.reps=reps;
testset{5}.recon_vis = recon_vis;
testset{5}.recon_tac = recon_tac;

% Paths to representations generated by MultiPredNet (from above testset),
% tactile only
load('path/to/testset2/tactile/reps.mat');                % 'both' representations
load('path/to/testset2/tactile/recon_vis.mat');           % 'visual' reconstructions 
load('path/to/testset2/tactile/recon_tac.mat');           % 'tactile' reconstructions

testset{6}.poses=poses;
testset{6}.reps=reps;
testset{6}.recon_vis = recon_vis;
testset{6}.recon_tac = recon_tac;

for index=1:6
    [testset{index}.pose_dist, testset{index}.reps_dist, testset{index}.rand_reps_dist, testset{index}.rank, testset{index}.rank_rand] = Calc_RDM(testset{index}.poses, testset{index}.reps, rot_scale);
end

fprintf('processed RSA! \n')

%% Display figure
Fig = figure(13); 
set( Fig, 'Name', 'MultiPredNet Representations compared to Pose Space','NumberTitle','off', 'Color', 'White');
clf

% Heatmaps ////////////////////////////////////
ax=axes('Position',[0.02 0.75 0.15 0.25]);
h = heatmap(testset{1}.pose_dist, 'ColorbarVisible', 'off'); % Beta=1
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.02 0.48 0.15 0.25]);
h = heatmap(testset{1}.reps_dist, 'ColorbarVisible', 'off'); % Beta=1
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.185 0.75 0.15 0.25]);
h = heatmap(testset{2}.pose_dist, 'ColorbarVisible', 'off'); % Beta =0.5
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.185 0.48 0.15 0.25]);
h = heatmap(testset{2}.reps_dist, 'ColorbarVisible', 'off'); % Beta =0.5
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.355 0.75 0.15 0.25]);
h = heatmap(testset{3}.pose_dist, 'ColorbarVisible', 'off'); % Beta =0.5
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.355 0.48 0.15 0.25]);
h = heatmap(testset{3}.reps_dist, 'ColorbarVisible', 'off'); % Beta =0.25
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.515 0.75 0.15 0.25]);
h = heatmap(testset{4}.pose_dist, 'ColorbarVisible', 'off'); % Beta =0.25
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.515 0.48 0.15 0.25]);
h = heatmap(testset{4}.reps_dist, 'ColorbarVisible', 'off'); % Beta =0.25
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.675 0.75 0.15 0.25]);
h = heatmap(testset{5}.pose_dist, 'ColorbarVisible', 'off'); % Beta =0.25
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.675 0.48 0.15 0.25]);
h = heatmap(testset{5}.reps_dist, 'ColorbarVisible', 'off'); % Beta =0.25
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.84 0.75 0.15 0.25]);
h = heatmap(testset{6}.pose_dist, 'ColorbarVisible', 'off'); % Beta =0.25
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));

ax=axes('Position',[0.84 0.48 0.15 0.25]);
h = heatmap(testset{6}.reps_dist, 'ColorbarVisible', 'off'); % Beta =0.25
Ax = gca;
Ax.XDisplayLabels = nan(size(Ax.XDisplayData));
Ax.YDisplayLabels = nan(size(Ax.YDisplayData));
colormap jet

% Boxplots ////////////////////////////////////
ax=axes('Position',[0.02 0.1 0.97 0.35]);
ranks = [testset{1}.rank testset{2}.rank testset{3}.rank testset{4}.rank testset{5}.rank testset{6}.rank];
boxplot(ranks);
yline(0.13,'--b'); %1-tail test 99% significance for N=100 degrees of freedom (Zar, 1984)
yline((mean(mean(testset{1}.rank_rand))+(mean(mean(testset{2}.rank_rand))+mean(mean(testset{3}.rank_rand)))/4),'--r');
axis([0.5 6.5 -0.4 1])
xticks([1 2 3 4 5 6])
%xticklabels({mean(testset{1}.rank),mean(testset{2}.rank),mean(testset{3}.rank),mean(testset{4}.rank),mean(testset{5}.rank),mean(testset{6}.rank)})
xticklabels({['#1 both: ' num2str(mean(testset{1}.rank))],['#1 visual:' num2str(mean(testset{2}.rank))],['#1 tactile:' num2str(mean(testset{3}.rank))],['#2 both: ' num2str(mean(testset{4}.rank))],['#2 visual: ' num2str(mean(testset{5}.rank))],['#2 tactile: ' num2str(mean(testset{6}.rank))]})
